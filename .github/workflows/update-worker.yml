name: Sync Latest Worker

on:
  workflow_dispatch:
  schedule:
    - cron: '0 1 * * *'  # 每天凌晨1点执行

permissions:
  contents: write

jobs:
  sync:
    runs-on: ubuntu-latest
    steps:
      - name: 检出仓库
        uses: actions/checkout@v4

      - name: 获取所有Release信息，取最新发布的
        id: get_release
        run: |
          API_URL="https://api.github.com/repos/bia-pain-bache/BPB-Worker-Panel/releases"
          RELEASE_DATA=$(curl -s $API_URL)

          # 找到发布时间最新的Release
          LATEST_RELEASE=$(echo "$RELEASE_DATA" | jq -r 'sort_by(.published_at) | reverse | .[0]')
          
          # 提取版本号、下载地址、发布时间
          TAG_NAME=$(echo "$LATEST_RELEASE" | jq -r '.tag_name')
          DOWNLOAD_URL=$(echo "$LATEST_RELEASE" | jq -r '.assets[] | select(.name | endswith("worker.zip")) | .browser_download_url')
          PUBLISHED_AT=$(echo "$LATEST_RELEASE" | jq -r '.published_at')

          # 设置为环境变量，后续步骤可以用
          echo "TAG_NAME=$TAG_NAME" >> $GITHUB_ENV
          echo "DOWNLOAD_URL=$DOWNLOAD_URL" >> $GITHUB_ENV
          echo "PUBLISHED_AT=$PUBLISHED_AT" >> $GITHUB_ENV

          echo "⭐ 最新Release版本: $TAG_NAME"
          echo "📅 发布时间: $PUBLISHED_AT"
          echo "🔗 下载链接: $DOWNLOAD_URL"

      - name: 检查是否已有最新版本
        id: check_version
        run: |
          # 仓库中保存上一次同步的版本（文件: .last_version）
          if [ -f .last_version ]; then
            LAST_VERSION=$(cat .last_version)
            echo "📝 上次同步版本: $LAST_VERSION"
          else
            echo "未找到历史版本，首次同步。"
            LAST_VERSION=""
          fi

          if [ "$LAST_VERSION" = "$TAG_NAME" ]; then
            echo "✅ 已经是最新版本，无需同步。"
            echo "skip_sync=true" >> $GITHUB_ENV
          else
            echo "需要同步新版本: $TAG_NAME"
            echo "skip_sync=false" >> $GITHUB_ENV
          fi

      - name: 退出（如果已经是最新版本）
        if: env.skip_sync == 'true'
        run: |
          echo "🎉 已是最新版本，跳过后续步骤。"
          exit 0

      - name: 清理旧文件（保留.git和.github）
        run: |
          echo "🧹 开始清理旧文件..."
          find . -mindepth 1 -maxdepth 1 ! -name '.git' ! -name '.github' ! -name '.last_version' -exec rm -rf {} +
          echo "✅ 清理完成"

      - name: 下载并解压 worker.zip
        run: |
          echo "⬇️ 开始下载 worker.zip..."
          wget -O worker.zip "${{ env.DOWNLOAD_URL }}"
          echo "📦 下载完成，开始解压..."
          unzip -o worker.zip
          rm -f worker.zip
          echo "✅ 解压完成，worker.zip已删除"

      - name: 保存最新版本号
        run: |
          echo "${{ env.TAG_NAME }}" > .last_version
          echo "📝 已记录最新版本: ${{ env.TAG_NAME }}"

      - name: 提交更新
        uses: stefanzweifel/git-auto-commit-action@v5
        with:
          commit_message: "同步最新Worker版本: ${{ env.TAG_NAME }} | 发布时间: ${{ env.PUBLISHED_AT }}"
          commit_author: "github-actions[bot] <github-actions[bot]@users.noreply.github.com>"
          branch: main
